{"version":3,"sources":["redux/actions/types.js","redux/reducers/todos.js","mock-data/todos.js","redux/rootReducer.js","redux/store.js","components/button.jsx","redux/actions/todos.js","containers/home/home.jsx","mock-data/months.js","containers/todo/view-todo.jsx","components/todo-form.jsx","containers/todo/create-todo.jsx","components/todo-card.jsx","containers/todos/todos.jsx","containers/todo/edit-todo.jsx","App.jsx","serviceWorker.js","index.js"],"names":["types","initialState","todos","data","i","push","date","Date","title","concat","description","todoData","lastLocation","todoreducer","state","arguments","length","undefined","action","MUTATE_TODOS_LIST","LAST_LOCATION","type","payload","Object","objectSpread","combineReducers","todosReducer","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","button","_ref","label","react_default","a","createElement","changeLastLocation","location","dispatch","Home","_this$props","this","props","pathname","className","react_router_dom","to","components_button","Component","connect","months","Todo","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTodoDetails","bind","assertThisInitialized","id","match","params","_this$getTodoDetails","getDay","getMonth","getYear","TodoForm","placeholder","handleSubmit","handleChange","setState","event","_event$target","target","value","name","defineProperty","preventDefault","_this$state","_this$props2","todoAction","index","unshift","mutateTodosList","window","href","_this$state2","_this$props3","onSubmit","required","onChange","_ref$todosReducer","CreateTodo","todo_form","todoCard","_ref$todo","todo","todoDate","substring","Todos","items","map","components_todo_card","EditTodo","_location$state","App","_configureStore","store","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","es","integration_react","react_router","exact","path","component","ViewTodo","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a7253f2.chunk.js","sourcesContent":["export default {\n  MUTATE_TODOS_LIST: 'MUTATE_TODOS_LIST',\n  LAST_LOCATION: 'LAST_LOCATION'\n}\n","import types from '../actions/types';\nimport todosData from '../../mock-data/todos';\n\nconst initialState = {\n  todos: todosData,\n  lastLocation: '/'\n}\n\nconst todoreducer = (state=initialState, action) => {\n  const { MUTATE_TODOS_LIST, LAST_LOCATION } = types;\n  const { type, payload } = action\n\n  switch(type) {\n    case MUTATE_TODOS_LIST:\n      return { ...state, todos: payload }\n\n    case LAST_LOCATION:\n      return { ...state, lastLocation: payload }\n\n    default:\n      return state\n  }\n}\n\nexport default todoreducer;\n","const todoData = () => {\n  const data = [];\n  for (let i=0; i<10; i++) {\n    data.push({\n      date: new Date(),\n      title: `${i} TODO`,\n      description: 'This is a TODO description.'\n    })\n  }\n  return data;\n}\n\nexport default todoData();\n","import { combineReducers } from 'redux';\n\nimport todosReducer from './reducers/todos';\n\nexport default combineReducers({\n  todosReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(\n    persistedReducer, applyMiddleware(thunk))\n  const persistor = persistStore(store);\n  return { store, persistor };\n;}\n","import React from 'react';\nimport '../assets/styles/button.css';\n\nconst button = ({label}) => {\n  return(\n    <button>{label}</button>\n  )\n}\n\nexport default button;\n","import types from './types';\n\nexport const mutateTodosList = (todos) => dispatch => {\n  dispatch({\n    type: types.MUTATE_TODOS_LIST,\n    payload: todos\n  })\n}\n\nexport const changeLastLocation = (location) => dispatch => {\n  dispatch({\n    type: types.LAST_LOCATION,\n    payload: location\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../components/button';\nimport { changeLastLocation } from '../../redux/actions/todos';\n\nimport '../../assets/styles/home.css'\n\nclass Home extends Component {\n\n  componentDidMount() {\n    const { dispatch, location: {pathname} } = this.props;\n    dispatch(changeLastLocation(pathname));\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"flex-content\">\n          <h1 className=\"mb-5\">T . O . D . O </h1>\n          <h3 className=\"mb-10\">manage your life like a pro</h3>\n          <Link to=\"/createTodo\"><Button label=\"Add a TODO\"/></Link>\n          <Link to=\"/todos\"><Button label=\"All my TODOs\"/></Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Home);","export default [\n  'January','February','March','April',\n  'May','June','July','August','September',\n  'October','November','December'\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../components/button';\nimport months from '../../mock-data/months';\nimport { changeLastLocation } from '../../redux/actions/todos';\n\nimport '../../assets/styles/view-todo.css';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.getTodoDetails = this.getTodoDetails.bind(this);\n  }\n\n  componentDidMount() {\n    const { dispatch, location: {pathname} } = this.props;\n    dispatch(changeLastLocation(pathname));\n  }\n\n  getTodoDetails() {\n    const { todos } = this.props;\n    const { id } = this.props.match.params;\n    let { date } = todos[id];\n    if (typeof date === \"string\") date = new Date(date)\n    return { ...todos[id], date, id }\n  }\n\n  render() {\n    const { date, description, title, id } = this.getTodoDetails();\n    return (\n      <div className=\"view-todo\">\n        <div className=\"view-todo-left\">\n          <h1>{title}</h1>\n          <h3>{date.getDay()} {months[date.getMonth()]}, {date.getYear() + 1900}</h3>\n          <p>{description}</p>\n          <span className=\"view-todo-left-button\">\n            <Link to=\"/createTodo\"><Button label=\"Add another todo\"/></Link>\n            <Link to={{\n              pathname: `/editTodo/${id}`,\n              state: {\n                description,\n                title\n              }\n            }}>\n              <Button label=\"Edit this TODO\"/>\n            </Link>\n          </span>\n        </div>\n        <div className=\"view-todo-right\">\n          <span className=\"view-todo-right-button\">\n            <Link to=\"/\"><button>Home</button></Link>\n            <Link to=\"/todos\"><button>All TODOs</button></Link>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({todosReducer: { todos }}) => ({todos})\n\nexport default connect(mapStateToProps)(Todo);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { mutateTodosList } from '../redux/actions/todos';\n\nimport '../assets/styles/create-todo.css';\nimport '../assets/styles/common.css';\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      placeholder: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { title, placeholder } = this.props;\n    this.setState({\n      title, placeholder\n    })\n  }\n\n  handleChange(event) {\n    const { value, name } = event.target;\n    this.setState({[name]: value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title, placeholder: description } = this.state;\n    const { dispatch, todos, todoAction, index } = this.props;\n    let location = '/todos'\n    if (todoAction === 'add') {\n      const date = new Date();\n      todos.unshift({ date, title, description })\n    }\n\n    if (todoAction === 'edit') {\n      todos[index].title = title;\n      todos[index].description = description;\n      location = `/todo/${index}`;\n    }\n\n    dispatch(mutateTodosList(todos))\n    window.location.href = location;\n  }\n\n  render() {\n    const { title, placeholder } = this.state;\n    const { todoAction, lastLocation } = this.props;\n    return (\n      <div className=\"main-div\">\n        <div className=\"left-div\">\n          <h1>{todoAction === 'edit' ? 'Edit' : 'Add'} your TODO</h1>\n          <span className=\"left-div-arrow\">&#187;</span>\n        </div>\n        <div className=\"right-div\">\n          <h3>Right here</h3>\n          <form onSubmit={this.handleSubmit}>\n            <input type=\"text\"\n              required\n              name=\"title\"\n              placeholder={title}\n              value={todoAction === 'edit' ? title : \"\"}\n              onChange={this.handleChange}/>\n            <textarea\n              required\n              name=\"placeholder\"\n              placeholder={placeholder}\n              value={todoAction === 'edit' ? placeholder : \"\"}\n              onChange={this.handleChange}/>\n            <span>\n              <Link to={lastLocation}><button>Cancel</button></Link>\n              <button type=\"submit\">{todoAction === 'edit' ? 'Save' : 'Add to my List'}</button>\n            </span>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ todosReducer, todosReducer: { todos, lastLocation }}) => ({\n  todos,\n  lastLocation\n})\n\nexport default connect(mapStateToProps)(TodoForm);\n","import React, { Component } from 'react';\n\nimport TodoForm from '../../components/todo-form';\n\nclass CreateTodo extends Component {\n  render() {\n    const placeholder = `\n    Add some text here. E.g.\n  \n    - get some milk\n    \n    - call mum\n    \n    - walk the dog`\n\n    return (\n      <TodoForm\n        title=\"Title\"\n        placeholder={placeholder}\n        todoAction=\"add\"/>\n    )\n  }\n}\n\nexport default CreateTodo;\n","import React from 'react';\n\nimport months from '../mock-data/months';\n\nimport '../assets/styles/todo-card.css';\n\nconst todoCard = ({todo: {date, title, description}}) => {\n  const todoDate = typeof date === 'string' ? new Date(date) : date;\n  return(\n  <div className=\"todo-card\">\n    <div>\n      <h2>{todoDate.getDay()}</h2>\n      <p>{months[todoDate.getMonth()]}, {todoDate.getYear() + 1900}</p>\n    </div>\n    <div className=\"todo-description\">\n      <h2>{title}</h2>\n      <p>{description.substring(0, 50)}</p>\n    </div>\n  </div>\n);}\n\nexport default todoCard;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport TodoCard from '../../components/todo-card';\nimport Button from '../../components/button';\nimport { changeLastLocation } from '../../redux/actions/todos';\n\nimport '../../assets/styles/todos.css';\nimport '../../assets/styles/common.css';\n\n\nclass Todos extends Component {\n  componentDidMount() {\n    const { dispatch, location: {pathname} } = this.props;\n    dispatch(changeLastLocation(pathname));\n  }\n\n  todos = (data) => {\n    const items = []\n    data.map((todo, index) => items.push(\n      <Link to={`/todo/${index}`} key={index}>\n        <TodoCard todo={todo}/>\n      </Link>\n      ))\n    return items\n  }\n\n  render() {\n    const { todos } = this.props;\n    return (\n      <div className=\"todos main-div\">\n        <div className=\"left-div\">\n          <h1>All TODOs</h1>\n          <span>\n            <Link to=\"/\"><Button label=\" &#171; Go Back Home\"/></Link>\n            <Link to=\"/createTodo\"><Button label=\"Add a TODO &#187;\"/></Link>\n          </span>\n        </div>\n        <div className=\"right-div\">\n          {this.todos(todos)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ todosReducer: { todos }}) => ({todos})\n\nexport default connect(mapStateToProps)(Todos);\n","import React, { Component } from 'react';\n\nimport TodoForm from '../../components/todo-form';\n\nclass EditTodo extends Component {\n  render() {\n    let title = 'Title';\n    let description = 'Enter a description'\n    const { id: index } = this.props.match.params;\n    const { location } = this.props;\n    if (location) {\n      ({title, description} = location.state);\n    } \n\n    return (\n      <TodoForm\n        title={title}\n        placeholder={description}\n        index={index}\n        todoAction=\"edit\"/>\n    )\n  }\n}\n\nexport default EditTodo;\n","import React, {Component} from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport configureStore from './redux/store';\nimport Home from './containers/home/home';\nimport ViewTodo from './containers/todo/view-todo';\nimport CreateTodo from './containers/todo/create-todo';\nimport Todos from './containers/todos/todos';\nimport EditTodo from './containers/todo/edit-todo';\n\nimport './assets/styles/App.css';\n\nclass App extends Component {\n  render() {\n    const { store, persistor } = configureStore();\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/createTodo\" component={CreateTodo}/>\n            <Route path=\"/editTodo/:id\" component={EditTodo}/>\n            <Route path=\"/todo/:id\" component={ViewTodo}/>\n            <Route path=\"/todos\" component={Todos}/>\n          </div>\n        </Router>\n        </PersistGate>\n        \n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}